# Nginx 配置示例
# 将文件复制到 /etc/nginx/sites-available/hffx-site
# 然后创建软链接: sudo ln -s /etc/nginx/sites-available/hffx-site /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name your-domain.com;  # 替换为您的域名或IP

    # 如果是本地IP调试，可以直接使用IP
    # server_name _;

    # 日志
    access_log /var/log/nginx/hffx-site-access.log;
    error_log /var/log/nginx/hffx-site-error.log;

    # 反向代理到 Next.js 应用
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Next.js 静态资源缓存
    location /_next/static/ {
        proxy_pass http://127.0.0.1:3000;
        expires 365d;
        add_header Cache-Control "public, immutable";
    }

    # 图片等资源缓存
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:3000;
        expires 7d;
        add_header Cache-Control "public";
    }

    # HTTPS 准备（后续添加证书后取消注释）
    # listen 443 ssl http2;
    # ssl_certificate /path/to/cert.pem;
    # ssl_certificate_key /path/to/key.pem;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers HIGH:!aNULL:!MD5;
    # ssl_prefer_server_ciphers on;
}

# HTTP 重定向到 HTTPS（启用 HTTPS 后取消注释）
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }

